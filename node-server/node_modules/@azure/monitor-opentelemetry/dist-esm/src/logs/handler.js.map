{"version":3,"file":"handler.js","sourceRoot":"","sources":["../../../src/logs/handler.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAE,uBAAuB,EAAE,MAAM,uCAAuC,CAAC;AAEhF,OAAO,EAAE,qBAAqB,EAAE,MAAM,uCAAuC,CAAC;AAC9E,OAAO,EAAE,uBAAuB,EAAE,MAAM,yBAAyB,CAAC;AAGlE,OAAO,EAAE,uBAAuB,EAAE,MAAM,sBAAsB,CAAC;AAE/D;;GAEG;AACH,MAAM,OAAO,UAAU;IAQrB;;;;OAIG;IACH,YAAY,MAAsB,EAAE,aAA4B;QAC9D,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,IAAI,uBAAuB,CAAC,MAAM,CAAC,2BAA2B,CAAC,CAAC;QACtF,IAAI,CAAC,wBAAwB,GAAG,IAAI,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjF,IAAI,CAAC,wBAAwB,GAAG,IAAI,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACjF,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,2BAA2B,EAAE,CAAC;IACrC,CAAC;IAEM,0BAA0B;QAC/B,OAAO,IAAI,CAAC,wBAAwB,CAAC;IACvC,CAAC;IAEM,0BAA0B;QAC/B,OAAO,IAAI,CAAC,wBAAwB,CAAC;IACvC,CAAC;IAEM,mBAAmB;QACxB,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAED;;OAEG;IACK,2BAA2B;;QACjC,IAAI,MAAA,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,MAAM,0CAAE,OAAO,EAAE,CAAC;YACxD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CACzB,IAAI,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,MAAM,CAAC,CACtE,CAAC;QACJ,CAAC;IACH,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AzureMonitorLogExporter } from \"@azure/monitor-opentelemetry-exporter\";\nimport { Instrumentation } from \"@opentelemetry/instrumentation\";\nimport { BunyanInstrumentation } from \"@opentelemetry/instrumentation-bunyan\";\nimport { BatchLogRecordProcessor } from \"@opentelemetry/sdk-logs\";\nimport { InternalConfig } from \"../shared/config\";\nimport { MetricHandler } from \"../metrics/handler\";\nimport { AzureLogRecordProcessor } from \"./logRecordProcessor\";\n\n/**\n * Azure Monitor OpenTelemetry Log Handler\n */\nexport class LogHandler {\n  private _azureExporter: AzureMonitorLogExporter;\n  private _azureLogRecordProcessor: AzureLogRecordProcessor;\n  private _batchLogRecordProcessor: BatchLogRecordProcessor;\n  private _metricHandler: MetricHandler;\n  private _config: InternalConfig;\n  private _instrumentations: Instrumentation[];\n\n  /**\n   * Initializes a new instance of the TraceHandler class.\n   * @param _config - Distro configuration.\n   * @param _metricHandler - MetricHandler.\n   */\n  constructor(config: InternalConfig, metricHandler: MetricHandler) {\n    this._config = config;\n    this._metricHandler = metricHandler;\n    this._azureExporter = new AzureMonitorLogExporter(config.azureMonitorExporterOptions);\n    this._batchLogRecordProcessor = new BatchLogRecordProcessor(this._azureExporter);\n    this._azureLogRecordProcessor = new AzureLogRecordProcessor(this._metricHandler);\n    this._instrumentations = [];\n    this._initializeInstrumentations();\n  }\n\n  public getAzureLogRecordProcessor(): AzureLogRecordProcessor {\n    return this._azureLogRecordProcessor;\n  }\n\n  public getBatchLogRecordProcessor(): BatchLogRecordProcessor {\n    return this._batchLogRecordProcessor;\n  }\n\n  public getInstrumentations(): Instrumentation[] {\n    return this._instrumentations;\n  }\n\n  /**\n   * Start auto collection of telemetry\n   */\n  private _initializeInstrumentations() {\n    if (this._config.instrumentationOptions.bunyan?.enabled) {\n      this._instrumentations.push(\n        new BunyanInstrumentation(this._config.instrumentationOptions.bunyan),\n      );\n    }\n  }\n}\n"]}